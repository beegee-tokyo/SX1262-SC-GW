/*
 / _____)             _              | |
( (____  _____ ____ _| |_ _____  ____| |__
 \____ \| ___ |    (_   _) ___ |/ ___)  _ \
 _____) ) ____| | | || |_| ____( (___| | | |
(______/|_____)_|_|_| \__)_____)\____)_| |_|
    (C)2015 Semtech

Description: End device commissioning parameters

License: Revised BSD License, see LICENSE.TXT file include in the project

Maintainer: Miguel Luis and Gregory Cristian
*/
#ifndef __LORA_COMMISSIONING_H__
#define __LORA_COMMISSIONING_H__

extern "C"
{
/**@brief Define your region here 
 * Required because each region has different regulations
 * The LoRa Alliance offers documentation for the regional parameters
 * Latest revision when this library was created
 * https://lora-alliance.org/resource-hub/lorawanr-regional-parameters-v11rb 
 * Check https://lora-alliance.org/resource-hub for any updates
 * 
 * Choose a matching region from below
 * REGION_AS923 -> Asia 923 MHz
 * REGION_AU915 -> Australia 915 MHz
 * REGION_CN470 -> China 470 MHz
 * REGION_CN779 -> China 779 MHz
 * REGION_EU433 -> Europe 433 MHz
 * REGION_EU868 -> Europe 868 MHz
 * REGION_IN865 -> India 865 MHz
 * REGION_KR920 -> Korea 920 MHz
 * REGION_US915 -> US 915 MHz
 */

#if !defined(REGION_AS923) && !defined(REGION_AU915) && !defined(REGION_CN470) && !defined(REGION_CN779) && !defined(REGION_EU433) && !defined(REGION_EU868) && !defined(REGION_IN865) && !defined(REGION_KR920) && !defined(REGION_US915) && !defined(REGION_US915_HYBRID)
#define REGION_US915
#endif

// /**@brief Indicate if a single channel gateway is the receiver
//  * When set to 1 the application does randomly change channels on each transmission
//  * When set to 0 the application uses always the base channel
//  */
// #define DO_CHANNEL_SWITCH 0

// /**@brief Channel to be used if we are talking to a single channel gateway
//  * Check the file CHANNELS.MD to find out which channel corresponds to which frequency 
//  * in a specific region
//  * Defaults to channel 0
//  */
// #define GATEWAY_SINGLE_CHANNEL 0

// /**@brief Datarate to be used if we are talking to a single channel gateway
//  * Check the file Region.h to find out which datarate corresponds to which SF 
//  * and bandwidth in a specific region
//  * Defaults to channel DR_3
//  */
// #define GATEWAY_SINGLE_DATARATE DR_3

/**@brief Define activation procedure here
 * More information https://www.thethingsnetwork.org/forum/t/what-is-the-difference-between-otaa-and-abp-devices/2723
 * When set to 1 the application uses the Over-the-Air activation procedure
 * When set to 0 the application uses the Personalization activation procedure
 */
#define OVER_THE_AIR_ACTIVATION 0

/**@brief Indicates if the end-device is to be connected to a private or public network
 */
#define LORAWAN_PUBLIC_NETWORK true

/**@brief Select if a hard coded device ID is used or an automatic generated one
 * When set to 1 DevEui is LORAWAN_DEVICE_EUI
 * When set to 0 DevEui is automatically generated by calling BoardGetUniqueId function
 */
#define STATIC_DEVICE_EUI 0

/**@brief Mote device IEEE EUI (big endian)
 *
 * @remark see STATIC_DEVICE_EUI comments
 */
#define LORAWAN_DEVICE_EUI                             \
	{                                                  \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 \
	}

/**@brief Application IEEE EUI (big endian)
 */
#define LORAWAN_APPLICATION_EUI                        \
	{                                                  \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 \
	}

/**@brief AES encryption/decryption cipher application key
 */
#define LORAWAN_APPLICATION_KEY                                                                        \
	{                                                                                                  \
		0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C \
	}

/**@brief Current network ID
 */
#define LORAWAN_NETWORK_ID (uint32_t)0

/**@brief Select if a hard coded device address is used or an automatic generated one
 * When set to 1 DevAdd is LORAWAN_DEVICE_ADDRESS
 * When set to 0 DevAdd is automatically generated using
 *         a pseudo random generator seeded with a value derived from
 *         BoardUniqueId value
 */
#define STATIC_DEVICE_ADDRESS 1

/**@brief Device address on the network (big endian)
 *
 * @remark In this application the value is automatically generated using
 *         a pseudo random generator seeded with a value derived from
 *         BoardUniqueId value if LORAWAN_DEVICE_ADDRESS is set to 0
 */
#define LORAWAN_DEVICE_ADDRESS (uint32_t)0x00000000

/**@brief AES encryption/decryption cipher network session key
 */
#define LORAWAN_NWKSKEY                                                                                \
	{                                                                                                  \
		0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C \
	}

/**@brief AES encryption/decryption cipher application session key
 */
#define LORAWAN_APPSKEY                                                                                \
	{                                                                                                  \
		0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C \
	}
};
#endif // __LORA_COMMISSIONING_H__
